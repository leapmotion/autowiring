"use strict";angular.module("autoNetApp",["ngAnimate","ngRoute","ngSanitize","ui.bootstrap"]).constant("WEBSOCKET_PORT",8e3).config(["$routeProvider",function(a){a.when("/main",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/edit",{templateUrl:"views/edit.html",controller:"EditCtrl"}).when("/raw",{templateUrl:"views/raw.html",controller:"RawCtrl"}).when("/filtergraph",{templateUrl:"views/filtergraph.html",controller:"FilterGraphCtrl"}).when("/object/:contextID/:linkName",{templateUrl:"views/object.html",controller:"ObjectCtrl"}).when("/context/:contextID",{templateUrl:"views/context.html",controller:"ContextCtrl"}).otherwise({redirectTo:"/main"})}]),angular.module("autoNetApp").controller("MainCtrl",["$scope","LeapState",function(a,b){a.leap=b,a.selectedType="contextMember"}]),angular.module("autoNetApp").factory("websocket",["$rootScope","WEBSOCKET_PORT",function(a,b){function c(a,b){this.name=a,this.args=b}function d(a){this.maxSize=a,this.messages=[]}function e(a){var b={type:a,args:Array.prototype.slice.call(arguments,1)};g.send(JSON.stringify(b))}d.prototype.addMessage=function(a,b){this.messages.length>=this.maxSize&&this.messages.pop(),this.messages.unshift(new c(a,b))};{var f=function(){g=new WebSocket("ws://localhost:"+b),g.onmessage=function(b){var c=JSON.parse(b.data);a.$emit("leap-"+c.type,c.args)},g.onopen=function(){clearInterval(h),h=null,i=!0,a.$digest()},g.onclose=function(){console.log("close"),i=!1,a.$digest(),a.$emit("leap-unsubscribed"),null===h&&(h=setInterval(f,1e3))}},g=null,h=null,i=!1;new d(200)}return f(),{on:function(b,c){console.log("Event Registered: ",b),a.$on("leap-"+b,function(b,d){a.$apply(function(){c.apply(g,d)})})},isConnected:function(){return i},SendMessage:e}}]),angular.module("autoNetApp").controller("HeaderCtrl",["$scope","websocket","info",function(a,b,c){function d(){b.isConnected()&&b.SendMessage("subscribe")}function e(){b.isConnected()&&b.SendMessage("unsubscribe")}function f(a){this.name=a}a.isSubscribed=!1,a.breakpoints={},a.info=c,b.on("subscribed",function(){a.isSubscribed=!0}),b.on("unsubscribed",function(){a.isSubscribed=!1}),a.toggleSubscription=function(){a.isSubscribed?e():d()},a.isConnected=function(){var c=b.isConnected();return c||(a.isSubscribed=!1),c},b.on("breakpoint",function(b){a.breakpoints[b]=new f(b)}),a.resumeFromBreakpoint=function(c){b.SendMessage("resumeFromBreakpoint",c),delete a.breakpoints[c]}}]),angular.module("autoNetApp").directive("directedTree",function(){return{template:'<canvas width="900" height="400">HTML5 canvas not supported on your browser</canvas>',restrict:"E",replace:!0,scope:{nodes:"="},controller:["$scope",function(a){a.graph=new Springy.Graph}],link:function(a,b){jQuery(function(){jQuery(b).springy({graph:a.graph})});var c=a.graph,d=a.graph.nodeSet;a.$watchCollection("nodes",function(a){var b=_.keys(a),e=_.keys(d),f=_.difference(b,e),g=_.difference(e,b);_.each(f,function(b){var d=a[b];c.addNode(new Springy.Node(d.id,{label:d.name}))}),_.each(f,function(b){var e=a[b];e.hasOwnProperty("parent")&&c.newEdge(d[e.parent],d[e.id])}),_.each(g,function(a){c.removeNode({id:Number(a)})})})}}}),angular.module("autoNetApp").directive("directedGraph",function(){return{template:'<canvas width="1000" height="600">HTML5 canvas not supported on your browser</canvas>',restrict:"E",replace:!0,scope:{nodes:"=",orphans:"=",unidentified:"=",id:"@",children:"@"},controller:["$scope",function(a){a.graph=new Springy.Graph}],link:function(a,b){jQuery(function(){jQuery(b).springy({graph:a.graph})});var c=a.graph,d=a.graph.nodeSet;a.$watchCollection("nodes",function(b){a.unidentified=[],a.orphans=[],_.each(b,function(e,f){!d.hasOwnProperty(f)&&e[a.children]&&e[a.children].length&&c.addNode(new Springy.Node(e[a.id],{label:e.name})),_.each(e[a.children],function(e){var g=e[a.id];if(b.hasOwnProperty(g)){if(!d.hasOwnProperty(g)){var h=b[g];c.addNode(new Springy.Node(h[a.id],{label:h.name,mass:.5}))}var i;i=e.autoRequired?{length:3,label:"AutoRequired",color:"#FF3333"}:{length:3,label:"Autowired",color:"#458B00"},c.newEdge(d[f],d[g],i)}else a.unidentified.push(g)})});var e={};_.extend(e,b),c.edges.forEach(function(a){delete e[a.source.id],delete e[a.target.id]}),a.orphans=_.pluck(e,a.id),a.unidentified=_.uniq(a.unidentified)})}}}),angular.module("autoNetApp").filter("display",function(){return function(a){return _.omit(a,"bolt","eventReceiver")}}),angular.module("autoNetApp").filter("TypeFilter",function(){return function(a,b){return a=_.sortBy(a,function(a){return a.name}),"all"===b?a:_.filter(a,function(a){return a.IsType(b)})}}),angular.module("autoNetApp").filter("Limit",function(){return function(a,b){return a.length<=b?a:a.substring(0,b-3)+"..."}}),angular.module("autoNetApp").controller("FilterGraphCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("autoNetApp").directive("routeNav",function(){return{restrict:"A",scope:{},link:function(a,b,c){a.$on("$routeChangeSuccess",function(a,d){var e=c.routeNav;b.toggleClass("active",e===d.$$route.originalPath)})}}}),angular.module("autoNetApp").directive("activeNav",function(){return{restrict:"A",scope:{check:"=check"},link:function(a,b,c){a.$watch("check",function(a){b.toggleClass("active",c.activeNav===a)}),b.on("click",function(b){b.stopImmediatePropagation(),b.preventDefault(),a.$apply(function(){a.check=c.activeNav})})}}}),angular.module("autoNetApp").directive("activeFilter",function(){return{restrict:"A",scope:{check:"=check"},link:function(a,b,c){a.$watchCollection("check",function(a){b.toggleClass("active",c.activeFilter in a)}),b.on("click",function(d){d.stopImmediatePropagation(),d.preventDefault(),a.$apply(function(){b.hasClass("active")?delete a.check[c.activeFilter]:a.check[c.activeFilter]=!0})}),b.on("click",function(d){d.stopImmediatePropagation(),d.preventDefault(),a.$apply(function(){b.hasClass("active")?delete a.check[c.activeFilter]:a.check[c.activeFilter]=!0})})}}}),angular.module("autoNetApp").factory("LeapState",["websocket",function(a){function b(a,b){this.objects={},this.name="Unnamed",this.id=a,this.children=[],_.extend(this,b),this.linkName=this.name.replace(/\s+/g,"_")}function c(a,b){if(this.name=b.name,this.linkName=this.name.replace(/\s+/g,"_"),this.types=a,this.displayTypes=_.without(Object.keys(this.types),"coreThread","bolt","eventReceiver"),this.slots=b.slots,a.hasOwnProperty("eventReceiver")){for(var c={},d=a.eventReceiver.length,e=0;d>e;e++){var f=a.eventReceiver[e];c[f]=0}this.types.eventReceiver=c}}b.prototype.addObject=function(a){this.objects[a.linkName]=a},c.prototype.IsType=function(a){return this.types.hasOwnProperty(a)},c.prototype.IsAnyType=function(a){var b=_.intersection(Object.keys(this.types),Object.keys(a));return 0!==b.length},c.prototype.isBolt=function(){return this.types.hasOwnProperty("bolt")},c.prototype.isEventReceiver=function(){return this.types.hasOwnProperty("eventReceiver")},c.prototype.isCoreThread=function(){return this.types.hasOwnProperty("coreThread")},c.prototype.eventFired=function(a){this.isEventReceiver()&&this.types.eventReceiver.hasOwnProperty(a)&&this.types.eventReceiver[a]++};var d={},e=[],f=!1;return a.on("subscribed",function(a){f=!0,e=a}),a.on("unsubscribed",function(){d={},e=[],f=!1}),a.on("newContext",function(a,c){if(d.hasOwnProperty(a))console.log("context alreadys exists");else{var e=new b(a,c);d[a]=e,d.hasOwnProperty(e.parent)&&d[e.parent].children.push(a)}}),a.on("expiredContext",function(a){var b=d[d[a].parent],c=b.children.indexOf(a);b.children.splice(c,1),delete d[a]}),a.on("newObject",function(a,b,e){var f=d[a],g=new c(b,e);f.addObject(g)}),a.on("eventFired",function(a,b){function c(a){if(d.hasOwnProperty(a)){var e=d[a];Object.keys(e.objects).forEach(function(a){var c=e.objects[a];c.eventFired(b.name)});for(var f=0;f<e.children.length;f++)c(e.children[f])}}c(a)}),a.on("coreThreadUtilization",function(a,b,c){var e=d[a],f=b.replace(/\s+/g,"_"),g=e.objects[f];return g.isCoreThread?void(g.types.coreThread=c):void console.log("Tried to updated utilization on non corethread")}),{GetContexts:function(){return d},isSubscribed:function(){return f},GetAllTypes:function(){return e},resolveProgressType:function(a){return 25>a?"success":50>a?"info":75>a?"warning":"danger"}}}]),angular.module("autoNetApp").controller("EditCtrl",["$scope","$timeout","LeapState","websocket",function(a,b,c,d){function e(c,d){a.contextMemberAlerts.unshift({message:c,type:d}),b(function(){a.contextMemberAlerts.pop()},4e3)}a.leap=c,a.selectedType=void 0,a.selectedCtxt=void 0,a.contextMemberAlerts=[],a.terminateContext=function(a){console.log("Terminate context: ",a.name),d.SendMessage("terminateContext",a.id)},a.injectContextMember=function(){return _.isUndefined(a.selectedType)?void e("<strong>Warning:</strong> Must select a type","warning"):_.isUndefined(a.selectedCtxt)?void e("<strong>Warning:</strong> Must select a context","warning"):void d.SendMessage("injectContextMember",a.selectedCtxt,a.selectedType)},d.on("newObject",function(a,b,c){e("<strong>New Object!</strong> "+c.name+" was successfully injected","success")})}]),angular.module("autoNetApp").controller("ObjectCtrl",["$scope","$routeParams","LeapState","websocket",function(a,b,c){a.leap=c,a.allContexts=c.GetContexts(),a.$watchCollection("allContexts",function(){a.context=a.allContexts[b.contextID],a.context&&(a.object=a.context.objects[b.linkName])})}]),angular.module("autoNetApp").controller("ContextCtrl",["$scope","LeapState","$routeParams",function(a,b,c){a.leap=b,a.allContexts=b.GetContexts(),a.$watchCollection("allContexts",function(){a.context=a.allContexts[c.contextID],a.allObjects={};for(var b=a.context;!_.isUndefined(b);)_.extend(a.allObjects,b.objects),b=a.allContexts[b.parent]})}]),angular.module("autoNetApp").filter("Pluck",function(){return function(a,b){return _.pluck(a,b)}}),angular.module("autoNetApp").filter("notEmpty",function(){return function(a){return!_.isEmpty(a)}}),angular.module("autoNetApp").factory("info",["$http",function(a){function b(a){a=new Date(a);var b=a.getUTCFullYear(),c="0"+(a.getUTCMonth()+1);c.slice(-2);var d="0"+a.getUTCDate();return d.slice(-2),b+"-"+c+"-"+d}var c={version:"0.0.0",deploy_date:b(new Date)};return a.get("/api/info/version").success(function(a){c.version=JSON.parse(a)}).error(function(){console.log("Version error!")}),a.get("/api/info/deploy_date").success(function(a){c.deploy_date=b(JSON.parse(a))}).error(function(){console.log("deploy_date error!")}),c}]);
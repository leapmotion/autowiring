{
  "name": "download",
  "version": "0.1.15",
  "description": "Download and extract files effortlessly",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/kevva/download"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "bin": {
    "download": "cli.js"
  },
  "scripts": {
    "test": "mocha --reporter list"
  },
  "files": [
    "cli.js",
    "index.js"
  ],
  "keywords": [
    "download",
    "extract",
    "http",
    "request",
    "url"
  ],
  "dependencies": {
    "decompress": "^0.2.0",
    "each-async": "^0.1.1",
    "get-stdin": "^0.1.0",
    "get-urls": "^0.1.1",
    "mkdirp": "^0.3.5",
    "nopt": "^2.2.0",
    "request": "^2.34.0",
    "through2": "^0.4.0"
  },
  "devDependencies": {
    "mocha": "^1.18.2",
    "nock": "^0.27.1",
    "rimraf": "^2.2.5"
  },
  "readme": "# download [![Build Status](https://secure.travis-ci.org/kevva/download.png?branch=master)](http://travis-ci.org/kevva/download)\n\n> Download and extract files effortlessly in Node.js.\n\n## Install\n\n```bash\n$ npm install --save download\n```\n\n## Usage\n\nIf you're fetching an archive you can set `extract: true` in options and\nit'll extract it for you.\n\n```js\nvar download = require('download');\n\n// download and extract `foo.tar.gz` into `bar/`\ndownload('foo.tar.gz', 'bar', { extract: true });\n\n// download and save `foo.exe` into `bar/foo.exe` with mode `0755`\ndownload('foo.exe', 'bar', { mode: '0755' });\n\n// download and save `foo.zip` into `bar/foobar.zip`\ndownload({ url: 'foo.zip', name: 'foobar.zip' }, 'bar');\n\n// download and save an array of files in `bar/`\nvar files = ['foo.jpg', 'bar.jpg', 'cat.jpg'];\ndownload(files, 'bar');\n\n// download, save and rename an array of files in `bar/`\nvar files = [{\n    url: 'foo.jpg',\n    name: 'foobar.jpg'\n}, {\n    url: 'cat.jpg',\n    name: 'dog.jpg'\n}];\ndownload(files, 'bar');\n```\n\n## API\n\n### download(url, dest, opts)\n\nDownload a file or an array of files to a given destination. Returns an EventEmitter\nthat emits the following possible events:\n\n* `response` — Relayed when the underlying `http.ClientRequest` emits the same\nevent. Listeners called with a `http.IncomingMessage` instance.\n* `data` — Relayed when the underlying `http.IncomingMessage` emits the same\nevent. Listeners called with a `Buffer` instance.\n* `error` — Relayed when the underlying `http.ClientRequest` emits the same event\nor when the response status code is not in the 200s. Listeners called with an\n`Error` instance (in the first case) or the response status code.\n* `close` — Relayed when the underlying `stream.Duplex` emits the same event.\n\n## Options\n\nYou can define options accepted by the [request](https://github.com/mikeal/request/) module besides from the options below.\n\n### extract\n\nType: `Boolean`  \nDefault: `false`\n\nIf set to `true`, try extracting the file using [decompress](https://github.com/kevva/decompress/).\n\n### mode\n\nType: `String`  \nDefault: `undefined`\n\nSet mode on the downloaded files.\n\n### strip\n\nType: `Number`  \nDefault: `0`\n\nEquivalent to `--strip-components` for tar.\n\n## CLI\n\nYou can also use it as a CLI app by installing it globally:\n\n```bash\n$ npm install --global download\n```\n\n### Usage\n\n```bash\n$ download --help\n\nUsage\n  $ download <url> <path>\n  $ cat <file> | download <path>\n\nExample\n  $ download https://github.com/kevva/download/archive/master.zip files\n  $ cat urls.txt | download files\n\nOptions\n  -e, --extract    Extract archive files on download\n```\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License) © [Kevin Mårtensson](http://kevinmartensson.com)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kevva/download/issues"
  },
  "homepage": "https://github.com/kevva/download",
  "_id": "download@0.1.15",
  "dist": {
    "shasum": "47351d553662196510a8cab740ae2ce51d0f4251"
  },
  "_from": "download@^0.1.2",
  "_resolved": "https://registry.npmjs.org/download/-/download-0.1.15.tgz"
}
